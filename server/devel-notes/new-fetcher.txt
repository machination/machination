- implement in python?
-- call from perl as program?

- program call:

 fetch [options] --config <xml_string> <fetch_id> <destination>
 fetch [options] --config-file <path> <fetch_id> <destination>

 options would mostly set properties of the fetcher object created
 within the fetch program.

- method:

 fetcher.config_xml(xml) or fetcher.config_file(file)
 fetcher.fetch(fetch_id,destination)

- config:
-- either standalone xml segment or part of a machination config file

<fetcher>
  <!-- try sources in order -->
  <source method="torrent" torrentFile="iinternal.torrent"
    url="http://internal-repo.see.ed.ac.uk/"/>
  <source method="torrent" torrentFile="external.torrent"
    url="http://external-repo.see.ed.ac.uk/"/>
  <source method="web" url="http://internal-repo.see.ed.ac.uk/">
    <!-- only attempt to use this source if the condition is met -->
    <condition>(IP4 in 129.215.232/24) or (IP4 in ...)</condition>
  </source>
  <source method="web" url="https://external-repo.see.ed.ac.uk/"/>
  <source method="svn"
    url="https://svn.see.ed.ac.uk/machination-downloads"/>
</fetcher>

- download repos:
-- subdirs for each downloadable id.
-- e.g. a file structure supporting all of the download sources above
   (apart from svn) with filesets id1 and id2:

   $base/id1/internal.torrent
   $base/id1/external.torrent
   $base/id1/web.index
   $base/id1/files/

   $base/id2/internal.torrent
   $base/id2/external.torrent
   $base/id2/web.index
   $base/id2/files/

- fetching
-- each method would have its own set of conventions:

--- torrent:
---- get torrent file $url/$id/$torrentFile
---- torrent file should say where to go from there

--- web:
---- get index file $url/$id/web.index
---- download all files in $url/$id/web.index (which should be in
     $url/$id/files/)

--- svn:
---- svn co $url/$id/files
