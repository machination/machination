<config>

  <!-- A machination 2 client can attach to more than one service -->
  <services>
    
    <service id="machination.eng.ed.ac.uk"
	     mid="myid on eng">
      <!-- Load balance across these interfaces perhaps, or maybe do
           load balancing at the server end (DNS round robin, proper
           clustering)? -->
      <interface id="https://interface1.machination.eng.ed.ac.uk"/>
      <interface id="https://interface2.machination.eng.ed.ac.uk"/>
    </service>
    
    <service id="machination.example.com"
	     mid="myid on example.com">
      <interface id="https://interface.machination.example.com"/>
    </service>

    <!-- the localhost 'service' is a planned future extension whereby
         changes can be made to a local file which will be merged into
         the profile. Used while disconnected or for changes that
         don't make sense to keep on any of the other services this
         client consumes configuration from. -->
    <service id="localhost"
	     mid="localhost">
      <interface id="file:///$mdir/services/localhost/desired.xml"/>
    </service>

    <!-- Config information from more than one source needs to be
         merged before a profile is generated -->
    <mergePolicy>
      <!-- something complicated goes in here! -->
    </mergePolicy>
    
  </services>

  <logging>
    <file id="$mdir/log.txt" loglevel="4"/>
    <file id="$mdir/verboselog.txt" loglevel="8"/>
    <syslog id="syslog.machination.eng.ed.ac.uk" loglevel="10"/>
    <syslog id="syslog.machination.example.com" loglevel="4"/>
  </logging>

  <!-- The daemon or service listening for 'kick' packets-->
  <daemon port="1313" sleeptime="4000"/>

  <!-- platforms supported by the client code installed here -->
  <platforms>
    <platform id="Win7_64"/>
    <platform id="WinXP_32"/>
    <platform id="WinXP_64"/>
  </platforms>

  <!-- Worker specific configuration -->
  <worker id="fetcher">
    <!-- Files are downloaded to the local cache  -->
    <cache>
      <!-- Where to put downloaded files. Bundles should be downloaded
           to $location/$id-->
      <location>c:\program files\machination\files</location>
      <!-- Maximum size of file cache. Something needs to be pruned if
           the download will exceed this limit. May be specified as an
           absolute value or a percentage of the partition/volume
           $location is on. -->
      <maxSize>10%</maxSize>
      <!-- There might be different pruning strategies... -->
      <pruningStrategy>fifo</pruningStrategy>
    </cache>

    <sources>
      <!-- The fetcher should try these sources in the order listed,
           like a path-->
      <source id="internal-torrent"
              type="torrent"
              torrentFileSource="http://www.internal.example.com/torrents"
              tracker="tracker.internal.example.com"
              />
      <source id="internal-web"
              type="http"
              baseURL="http://web.internal.example.com"
              />
      <source id="external-torrent"
              type="torrent"
              torrentFileSource="http://www.external.example.com/torrents"
              tracker="tracker.external.example.com"
              />
      <source id="someone-else"
              type="torrent"
              torrentFileSource="http://www.peer.com/torrents"
              tracker="tracker.peer.com"
              />
    </sources>
  </worker>

</config>
