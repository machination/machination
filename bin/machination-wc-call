#!/usr/bin/python3

import sys
import argparse
import getpass
import os.path
from machination.webclient import WebClient
from lxml import etree
import json

def main(inargs):
    ap = argparse.ArgumentParser(description=__doc__)
    ap.add_argument('--name', '-n')
    ap.add_argument('--type', '-t', default="person")
    ap.add_argument('--authtype', '-a', default="basic")
    ap.add_argument('--opt', '-o', action='append')
    # TODO(Colin): get default service from config file
    ap.add_argument('--service', '-s',
                    default='http://localhost/machination/hierarchy')
    ap.add_argument('call');
    ap.add_argument('args', nargs=argparse.REMAINDER)
    args = ap.parse_args(inargs)
    print(args)

    opts = {}

    pubwc = WebClient(args.service, 'public', 'person')
    sxml = pubwc.call('ServiceConfig')
    sc = etree.fromstring(sxml)

    for atelt in sc.xpath('authentication/type'):
        print(atelt.get('id'))
        for cf in atelt.xpath('clientField'):
            msg = cf.get('id')
            if(cf.get('alias')):
                msg = msg + '(' + cf.get('alias') + ')'
            print('  ' + msg)

    atelt = sc.xpath('authentication/type[@id="{}"]'.format(args.authtype))
    if not atelt:
        raise Exception("Can't handle authtype {}".format(args.authtype))

    call_args = [json.loads(x) for x in args.args]
    print(args.call, call_args)

    if args.authtype == 'debug':
        cred = { 'name': args.name }
    wc = WebClient(args.service, args.authtype, args.type, credentials=cred)
    print(json.dumps(wc.call(args.call, *call_args), indent=2))

if __name__ == '__main__':
    main(sys.argv[1:])
