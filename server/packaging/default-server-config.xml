<config>
  <!-- machination dir (mdir) is defined to be the parent dir of this
       config file -->

  <!-- define a path inside mdir by having no leading "/" -->
  <dir xml:id="dir.INSIDE">
    <component value="inside"/>
  </dir>
  <!-- define a path outside mdir by starting with a "/" -->
  <dir xml:id="dir.VAR">
    <component value="/var/machination"/>
  </dir>
  <!-- use a previously defined dir in any new dir like this -->
  <dir xml:id="dir.ILLUSTRATION">
    <component ref="dir.VAR"/>
    <component value="illustration"/>
  </dir>

  <dir xml:id="dir.DATA">
    <component value="/var/lib/machination/server"/>
  </dir>
  <dir xml:id="dir.CONFIG">
    <component value="/etc/machination/server"/>
  </dir>
  <dir xml:id="dir.SECRETS">
    <component ref="dir.CONFIG"/>
    <component value="secrets"/>
  </dir>
  <dir xml:id="dir.LOG">
    <component value="/var/log/machination/server/file"/>
  </dir>
  <dir xml:id="dir.DATABASE">
    <component ref="dir.DATA"/>
    <component value="database"/>
  </dir>

  <!-- specify files like this -->
  <file xml:id="file.SPLAT" dir="dir.SECRETS" name="splat.xml"/>

  <file xml:id="file.TEST" dir="dir.SECRETS" name="test.txt"/>

  <subconfig xml:id="subconfig.database">
    <file xml:id="file.database.CREDENTIALS"
	  dir="dir.SECRETS" name="dbcred.xml"/>
    <dir xml:id="dir.database.FUNCTIONS">
      <component ref="dir.DATABASE"/>
      <component value="functions"/>
    </dir>
    <file xml:id="file.database.BOOTSTRAP_ASSERTIONS"
	  dir="dir.DATABASE" name="bootstrap_assertions.xml"/>
    <file xml:id="file.database.BOOTSTRAP_LIB_ASSERTIONS"
	  dir="dir.DATABASE" name="bootstrap_lib_assertions.xml"/>
    <file xml:id="file.database.BOOTSTRAP_CHANNELS"
	  dir="dir.DATABASE" name="bootstrap_channels.xml"/>
    <file xml:id="file.database.BOOTSTRAP_SET_CONDITIONS"
	  dir="dir.DATABASE" name="bootstrap_set_conditions.xml"/>
    <file xml:id="file.database.BOOTSTRAP_SETMEMBER_TYPES"
	  dir="dir.DATABASE" name="bootstrap_setmember_types.xml"/>
    <file xml:id="file.database.BOOTSTRAP_OSES"
	  dir="dir.DATABASE" name="bootstrap_oses.xml"/>
    <connection method="network">
      <server>localhost</server>
      <port>5432</port>
      <database>machination</database>
      <driver>Pg</driver>
    </connection>
  </subconfig>

  <subconfig xml:id="subconfig.hsh">
    <defaultUser>{}@COSIGN.REALM</defaultUser>
  </subconfig>

  <subconfig xml:id="subconfig.haccess"
             serviceId="machination-initial-id"
             URI="https://localhost/machination/hierarchy">
    <authentication>

      <!-- Default authentication type for each object type -->
      <objType id="person" defaultAuth="cosign"/>
      <objType id="os_instance" defaultAuth="cert"/>

      <!-- Authentication types:

           <type id="public|debug|cert|cosign|basic"
                 defaultObjectType="entity object type"
                 entityPattern="optional pattern">

             ...all the object types allowed to use this kind of auth
             <objType id="obj_type"/>
             ...

           </type>

           defaultObjectType = object type to assume if not specified
             in remote_user

           entityPattern = perl regex used to find object name and
             type. in remote_user Use the named capture buffers 'name'
             and 'type'. Evaluated with /x (whitespace and comments
             allowed) mode. Remember to quote xml chars (&lt; &gt; etc.)

           default entityPattern is:
           (?(?=:)) # does entity have a ":" in it
             # yes: interpret as type:name
             ^(?<type>.*?):(?<name>.*)$ |
             # no: interpret as just name
             ^(?<name>.*)$
        -->
      <type id="public" defaultObjType="person">
        <objType id="person"/>
      </type>
      <type id="debug" defaultObjType="person">
        <!-- allowed object types for this auth method -->
        <objType id="person" defaultName="dev"/>
        <objType id="os_instance"/>
      </type>
      <type id="cert" defaultObjType="os_instance">
        <objType id="os_instance"/>
        <objType id="person"/>
      </type>
      <type id="cosign" defaultObjType="person"
            cosignLoginPage="https://my.cosign.service/">
        <objType id="person"/>
      </type>
      <type id="basic" defaultObjType="person">
        <objType id="person"/>
      </type>

      <certSign lifetime="3650">
        <ca certfile="/usr/share/ca-certificates/machination-server/machination-server-ca.crt"
            keyfile="secrets/machination-server-ca.key"/>
        <clientCNForm check="re" value="^.+?:.+$"/>
      </certSign>

    </authentication>
    <dir xml:id="dir.SHM">
      <component value="/dev/shm/machination"/>
    </dir>
    <log>
      <logMethods streams="0" file="1" syslog="1"/>
      <file xml:id="file.haccess.LOG"
	    dir="dir.LOG" name="haccess.log"/>
      <syslog facility="LOG_LOCAL5"
	      port="514"
	      server="localhost"/>
      <progname>machination.haccess</progname>
      <msgDelimeter>**</msgDelimeter>
      <newlineAfterPrefix>0</newlineAfterPrefix>
      <indent>delimeter</indent>
      <message_settings>
	<cat_prefix></cat_prefix>
	<error level="10"
	       left="&lt;" right="&gt;"
	       prefix="ERROR:"
	       syslog_priority="LOG_ERR"
	       ostream="STDERR"/>
	<debug level="10"
	       left="[" right="]"
	       prefix=""
	       syslog_priority="LOG_DEBUG"
	       ostream="STDERR"/>
	<log level="4"
	     left="(" right=")"
	     prefix=""
	     syslog_priority="LOG_INFO"
	     ostream="STDOUT"/>
	<warning level="4"
	       left="{" right="}"
	       prefix="WARNING:"
	       syslog_priority="LOG_WARNING"
	       ostream="STDERR"/>
      </message_settings>
    </log>
  </subconfig>

</config>
